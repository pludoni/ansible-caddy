# {{ansible_managed}}
{% for routing in caddy_routings %}
{% if not routing.letsencrypt is defined or not routing.letsencrypt and not routing.plain_http is defined %}
{{routing.domains|join(':80, ')}}:80 {
  redir 301 {
    if {scheme} not https
    / https://{host}{uri}
  }
}
{% endif %}

{{routing.domains|join(', ')}} {
{% if routing.redirects is defined %}
{% for redirect in routing.redirects %}
   redir 302 {
        if {hostonly} is {{redirect.from}}
        /  https://{{redirect.to}}{uri}
  }
{% endfor %}
{% endif %}
{% if routing.target is defined %}
  proxy / {{routing.target}} {
    websocket
    transparent
  }
{% endif %}
{% if routing.root is defined %}
  root {{routing.root}}
{% endif %}
{% if routing.php is defined %}
  fastcgi / /run/php/php{{routing.php}}-fpm.sock php {
		ext .php
		split .php
		index index.php
  }
  # This rewrite is to prevent access to dot files and folders such
  # as .htaccess, .git, etc.
	rewrite {
		if {path} starts_with .
		if {path} not_starts_with .well-known
		to error/index.html
	}
{% endif %}
  gzip
{% if routing.letsencrypt is defined and routing.letsencrypt%}
  tls "{{caddy_letsencrypt_email}}"
{% elif routing.ssl_key is defined %}
  tls {{routing.ssl_crt}} {{routing.ssl_key}}
{% else %}
  tls self_signed
{% endif %}
  log / {{caddy_log_dir}}/{{routing.name}}/access.log "{combined}"
  errors {{caddy_log_dir}}/{{routing.name}}/error.log
  timeouts {
    read   {{routing.read_timeout|default('1m')}}
    header {{routing.header_timeout|default('1m')}}
    write  {{routing.write_timeout|default('1m')}}
    idle   {{routing.idle_timeout|default('1m')}}
  }
{% if routing.basic_auth is defined %}
  basicauth / {{routing.basic_auth.username}} {{routing.basic_auth.password}}
{% endif %}
{% if block_ips is defined %}
  ipfilter / {
    rule block
    ip {{block_ips|join(' ')}}
  }
{% endif %}
{% if routing.custom_caddy is defined %}
  {{routing.custom_caddy}}
{% endif %}
}
{% endfor %}


# vim: ft=caddyfile.jinja2
